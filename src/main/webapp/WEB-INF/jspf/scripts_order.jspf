<script>
    let i = 0;
    let j = 0;
    let m = 0;
    let n = 0;
    let l = 0;

    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('exonerated').addEventListener('input', totalsum);
        document.getElementById('taxable').addEventListener('input', totalsum);
        document.getElementById('tax').addEventListener('input', totalsum);
    });
    document.getElementById('orderform').addEventListener('submit', function (event) {
        event.preventDefault(); // Evita que el formulario se envíe
        event.stopPropagation();

        const cli = document.getElementById('clientname');
        const tip = document.getElementById('contracttype');
        const mon = document.getElementById('contractcurrency');
        const des = document.getElementById('contractdescription');
        const pla = document.getElementById('contractterm');
        const exo = document.getElementById('exonerated');
        const bas = document.getElementById('taxable');
        const imp = document.getElementById('tax');
        const tot = document.getElementById('total');

        let fields = [cli, tip, mon, des, pla, exo, bas, imp, tot];

        fields.forEach(field => {
            field.classList.remove('is-valid', 'is-invalid');
        });

        fields.forEach(field => {
            if (field.value === "") {
                field.classList.add('is-invalid');
            } else {
                field.classList.add('is-valid');
            }
        });
        const totgen = parseFloat(tot.value) || 0;
        const container = document.getElementById('container-payment');
        const items = container.querySelectorAll('input[name="amount"]');

        let totdet = 0;
        items.forEach(item => {
            let valor = parseFloat(item.value) || 0;
            totdet = totdet + valor;
        });

        if (totdet !== totgen) {
            Swal.fire({
                title: '¡Error!',
                text: 'El valor total no coincide con al sumatoria del detalle de pago, verifique.',
                icon: 'error',
                showConfirmButton: true,
                confirmButtonText: 'Ok',
                background: '#f0f9ff',
                confirmButtonColor: '#3085d6'
            });
        } else {
            if (
                    cli.value.trim() !== "" &&
                    tip.value.trim() !== "" &&
                    mon.value.trim() !== "" &&
                    des.value.trim() !== "" &&
                    pla.value.trim() !== "" &&
                    exo.value.trim() !== "" &&
                    bas.value.trim() !== "" &&
                    imp.value.trim() !== "" &&
                    tot.value.trim() !== ""
                    ) {
                let actiontype = document.getElementById('form-btn').value;
                if (actiontype == 'create') {
                    createcontract();
                } else if (actiontype == 'edit') {
                    editcontract();
                }
            }
        }
    });
    document.getElementById('input-excel').addEventListener('change', function (e) {
        const file = e.target.files[0];
        if (!file) {
            return;
        } else {
            const reader = new FileReader();
            reader.onload = function (e) {
                const data = new Uint8Array(e.target.result);
                const workbook = XLSX.read(data, {type: 'array'});
                const headers = ["Item", "Descripcion", "Unidad", "Cantidad", "Precio Unitario", "SubTotal (sin IGV)"];
                const columns = ["A1", "B1", "C1", "D1", "E1", "F1"];

                try {
                    const Headers = [];
                    const sheet = workbook.Sheets["Detalle Presupuesto"];
                    if (sheet) {
                        for (let i = 0; i < headers.length; i++) {
                            const cell = sheet[columns[i]]?.v?.toString().trim();
                            Headers.push(cell);
                        }
                    } else {
                        throw new Error(`La hoja Detalle Presupuesto no fue encontrada en el archivo Excel.`);
                    }

                    for (let j = 0; j < headers.length; j++) {
                        if (headers[j] !== Headers[j]) {
                            throw new Error("El formato no corresponde en la celda " + columns[j] + ", debe decir: " + headers[j]);
                        }
                    }
                    const result = XLSX.utils.sheet_to_json(sheet);

                    let html = "";
                    let a = "";
                    let b = "";
                    let c = "";
                    let d = "";
                    let e = "";
                    let f = "";
                    result.forEach((row) => {
                        const item = String(row["Item"] || "").trim();
                        if (!item) {
                            return;
                        } else {
                            const ti = item.split(".");
                            switch (ti.length) {
                                case 1:
                                    a = String(row["Item"]).trim();
                                    b = String(row["Descripcion"]).trim();
                                    c = parseFloat(row["SubTotal (sin IGV)"]) || 0;
                                    html = `<div id="item` + a + `" class="row">
                                                <input type="hidden" name="valitem" value="">    
                                                <input type="hidden" name="numitem" value="` + a + `">  
                                                <input type="hidden" name="subitem" value="1">      
                                                <div class="col-md-2 d-flex">
                                                    <div class="form-floating m-2">
                                                        <button style="width: 70px;" onclick="addbudgetdetail('item` + a + `')" type="button" class="btn btn-warning">
                                                            <img style="filter: brightness(0) invert(1);" src="RESOURCES/svg/newdetail.svg" width="16" height="16" Title="Añadir detalle" data-bs-toggle="tooltip"> 
                                                        </button>
                                                    </div>
                                                    <div class="form-floating m-2">
                                                        <button style="width: 70px;" onclick="dropbudgetdetail('item` + a + `')" type="button" class="btn btn-danger">
                                                            <img style="filter: brightness(0) invert(1);" src="RESOURCES/svg/trash.svg" width="16" height="16" Title="Eliminar detalle" data-bs-toggle="tooltip"> 
                                                        </button>
                                                    </div>  
                                                </div>
                                                <div class="col-md-1">
                                                    <div class="form-floating mb-2">
                                                        <input type="text" name="itemnum` + a + `" class="budgetitem form-control" value="` + a + `" disabled>
                                                        <label for="floatingInput">Item</label>
                                                    </div> 
                                                </div>  
                                                <div class="col-md-7">
                                                    <div class="form-floating mb-2">
                                                        <input type="text" name="itemdes` + a + `" class="budgettittle form-control" value="` + b + `" required>
                                                        <label for="floatingInput">Ingrese el titulo de la partida</label>
                                                    </div> 
                                                </div>  
                                                <div class="col-md-2">
                                                    <div class="form-floating mb-2">
                                                        <input type="number" name="itemsub` + a + `" class="subtotal form-control" step="0.01" value="` + c.toFixed(2) + `" required disabled>
                                                        <label for="floatingInput">Parcial</label>
                                                    </div>
                                                </div>
                                            </div>`;
                                    document.getElementById('order-details').insertAdjacentHTML("beforeend", html);
                                    document.querySelector("#budget-row .budget-items").value = a;
                                    html = "";
                                    break;
                                case 2:
                                    a = String(row["Item"]).trim();
                                    b = String(row["Descripcion"]).trim();
                                    c = String(row["Unidad"]).trim();
                                    d = parseFloat(row["Cantidad"]) || 0;
                                    e = parseFloat(row["Precio Unitario"]) || 0;
                                    f = parseFloat(row["SubTotal (sin IGV)"]) || 0;

                                    html = `<div id="subitem` + ti[0] + `_` + ti[1] + `" class="d-flex">
                                                <div style="width: 7%;" class="form-floating mb-2">
                                                    <input type="text" name="subitem` + ti[0] + `_` + ti[1] + `" class="form-control" value="` + a + `" disabled>
                                                    <label for="floatingInput">Item</label>
                                                </div>
                                                <div style="width: 42.1%;" class="form-floating mb-2">
                                                    <input type="text" name="subdescription` + ti[0] + `_` + ti[1] + `" class="form-control" value="` + b + `" required>
                                                    <label for="floatingInput">Descripcion</label>
                                                </div>
                                                <div style="width: 12%;" class="form-floating mb-2">
                                                    <select name="subunit` + ti[0] + `_` + ti[1] + `" class="form-select" name="subunit" aria-label="Floating label select example" required>
                                                        <option></option>
                                                        <option value="GLB">GLB</option>
                                                        <option value="BAL">BAL</option>
                                                        <option value="BOT">BOT</option>
                                                        <option value="CJA">CJA</option>
                                                        <option value="CM">CM</option>
                                                        <option value="MT">MT</option>
                                                        <option value="CM2">CM2</option>
                                                        <option value="MT2">MT2</option>
                                                        <option value="CM3">CM3</option>
                                                        <option value="MT3">MT3</option>
                                                        <option value="MMT">MMT</option>
                                                        <option value="MM2">MM2</option>
                                                        <option value="MM3">MM3</option>
                                                        <option value="GR">GR</option>
                                                        <option value="KG">KG</option>
                                                        <option value="TON">TON</option>
                                                        <option value="MLL">MLL</option>
                                                        <option value="PAQ">PAQ</option>
                                                        <option value="PAL">PAL</option>
                                                        <option value="UNID">UNID</option>
                                                        <option value="DOC">DOC</option>
                                                    </select>
                                                    <label for="floatingSelect">Unid.</label>
                                                </div>
                                                <div style="width: 12%;" class="form-floating mb-2">
                                                    <input type="number" name="subquantity` + ti[0] + `_` + ti[1] + `" class="form-control" step="0.01" value="` + d + `" required>
                                                    <label for="floatingInput">Cant.</label>
                                                </div>
                                                <div style="width: 12%;" class="form-floating mb-2">
                                                    <input type="number" name="subprice` + ti[0] + `_` + ti[1] + `" class="form-control" step="0.01" value="` + e.toFixed(2) + `" required>
                                                    <label for="floatingInput">P. unit. sin igv</label>
                                                </div>
                                                <div style="width: 14.9%;" class="form-floating mb-2">
                                                    <input type="number" name="subtotal` + ti[0] + `_` + ti[1] + `" class="form-control" step="0.01" value="` + f.toFixed(2) + `" required>
                                                    <label for="floatingInput">Subtotal</label>
                                                </div>
                                            </div>`;
                                    document.getElementById("item" + ti[0]).insertAdjacentHTML("beforeend", html);
                                    let p = parseInt(ti[1]) + 1;
                                    document.querySelector("#item" + ti[0] + " [name='valitem']").value = "subitem" + ti[0] + "_" + ti[1];
                                    document.querySelector("#item" + ti[0] + " [name='subitem']").value = p;
                                    document.querySelector("#subitem" + ti[0] + "_" + ti[1] + " [name='subunit']").value = c;
                                    //const unit = document.querySelector("subunit" + ti[0] + "_" + ti[1]);
                                    //unit.value = c;
                                    html = "";
                                    break;
                                default:
                                    break;
                            }
                        }
                        subtotalsum();
                    });
                } catch (error) {
                    Swal.fire({
                        title: '¡Error!',
                        text: error.message,
                        icon: 'error',
                        showConfirmButton: false,
                        confirmButtonText: 'Ok',
                        background: '#f0f9ff',
                        confirmButtonColor: '#3085d6'
                    });
                }
            };

            reader.readAsArrayBuffer(file);
        }
    });
    document.getElementById('order-details').addEventListener('input', function (e) {
        let o = e.target.name;
        let t = o.match(/[a-zA-Z]+/g); //texto
        let n = o.match(/\d+/g); //numero

        if (t[0] === 'subprice' || t[0] === 'subquantity') {
            const st = document.querySelector('input[name="subtotal' + n[0] + '_' + n[1] + '"]');
            const sq = document.querySelector('input[name="subquantity' + n[0] + '_' + n[1] + '"]');
            const sp = document.querySelector('input[name="subprice' + n[0] + '_' + n[1] + '"]');

            let q = sq.value;
            let p = sp.value;
            let t = parseFloat(q) * parseFloat(p);
            t = isNaN(t) ? 0 : t; //isNaN si es un numero valido
            st.value = t.toFixed(2);

            parcialsum(n[0]);
        }
    });
    document.getElementById('billable').addEventListener('change', function () {
        subtotalsum();
    });
    function parcialsum(index) {
        let sbt = 0;
        const items = document.querySelector('#item' + index + ' input[name="subitem"]');
        const tot = document.querySelector('#item' + index + ' input[name="itemsub' + index + '"]');

        for (let cursor = 1; cursor < items.value; cursor++) {
            const sum = document.querySelector('input[name="subtotal' + index + '_' + cursor + '"]');
            let s = parseFloat(sum.value);
            s = isNaN(s) ? 0 : s;
            sbt += s;
            tot.value = sbt.toFixed(2);
        }
        subtotalsum();
    }
    function subtotalsum() {
        const billable = document.querySelector('input[name="billable"]');

        const Items = document.getElementById("budget-items").value;
        const Exo = document.getElementById("exonerated");
        const Txb = document.getElementById("taxable");
        const Tax = document.getElementById("tax");
        const Tot = document.getElementById("total");

        let sum = 0;
        for (let f = 1; f <= Items; f++) {
            const num = document.querySelector("#item" + f + " .subtotal");
            let sma = parseFloat(num?.value || 0);
            sum += sma;
        }

        if (billable.checked) {
            const base = sum;
            const igv = base * 0.18;
            const total = base + igv;

            Exo.value = "0.00";
            Txb.value = base.toFixed(2);
            Tax.value = igv.toFixed(2);
            Tot.value = total.toFixed(2);
        } else {
            Exo.value = sum.toFixed(2);
            Txb.value = "0.00";
            Tax.value = "0.00";
            Tot.value = sum.toFixed(2);
        }
    }


    function newcontract() {

        i = 0;
        j = 0;
        cleanform();
        document.getElementById('staticBackdropLabel').textContent = "Nueva orden";
        const actionbtn = document.getElementById('form-btn');
        actionbtn.value = "create";
        document.getElementById("modal").click();
    }
    function createcontract() {
        const projectname = document.getElementById('projectname').value;
        const dataToSend = datatosend();
        fetch('contract?action=create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(dataToSend)
        }).then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: '¡Éxito!',
                            text: 'Se creó el contrato correctamente.',
                            icon: 'info',
                            timer: 2500,
                            showConfirmButton: false,
                            //confirmButtonText: 'Ok',
                            background: '#f0f9ff',
                            confirmButtonColor: '#3085d6'
                        }).then(() => {
                            window.location.href = 'contract?action=load&project=' + projectname;
                        });
                    } else {
                        Swal.fire({
                            title: '¡Error!',
                            text: 'Ocurrió un error reintente o pongase en contacto con el administrador del sistema.',
                            icon: 'error',
                            //timer: 2500,
                            showConfirmButton: false,
                            //confirmButtonText: 'Ok',
                            background: '#f0f9ff',
                            confirmButtonColor: '#3085d6'
                        }).then(() => {
                            window.location.href = 'contract?action=load&project=' + projectname;
                        });
                    }
                })
                .catch(error => console.error(error));
    }
    function loadcontract(id) {

        j = 0;
        cleanform();
        document.getElementById("staticBackdropLabel").textContent = "Editar proyecto";
        fetch('contract?action=read&id=' + id)
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Error al obtener los datos");
                    }
                    return response.json();
                })
                .then(data => {
                    const contract = data[0];
                    //document.getElementById('projectid').value = contract.id;
                    document.getElementById('contractid').value = id;
                    document.getElementById('clientid').value = contract.clientes_id;
                    document.getElementById('clientname').value = contract.nombreCliente;
                    document.getElementById('contracttype').value = contract.tipoContrato_id;
                    document.getElementById('contractcurrency').value = contract.tipoMoneda_id;
                    document.getElementById('contractdescription').value = contract.descripcionContrato;
                    document.getElementById('contractterm').value = contract.plazoContrato;
                    //===========================================================
                    let paytype = contract.tipopagoContrato;
                    const radio = document.querySelector(`input[name="paymenttype"][value="` + paytype + `"]`);
                    if (radio)
                        radio.checked = true;
                    const detail = JSON.parse(contract.formapagoContrato);
                    const container = document.getElementById("container-payment");
                    detail.forEach(field => {
                        console.log(field);
                        console.log("Contador!" + j);
                        if (paytype === 'VALORIZACIONES') {
                            j++;
                            container.insertAdjacentHTML("beforeend", addpaymentitem(paytype));
                            const payitem = container.querySelector('#item' + j);
                            payitem.querySelector('select[name="header"]').value = field.header;
                            payitem.querySelector('input[name="description"]').value = field.description;
                            payitem.querySelector('input[name="amount"]').value = field.amount;
                        } else if (paytype === 'HITOS') {
                            j++;
                            container.insertAdjacentHTML("beforeend", addpaymentitem(paytype));
                            flatpickr(".datepicker", {
                                dateFormat: "d/m/Y",
                                altInput: true,
                                altFormat: "F j, Y",
                                allowInput: true,
                                locale: "es" // ? idioma español
                            });
                            const payitem = container.querySelector('#item' + j);
                            payitem.querySelector('select[name="header"]').value = field.header;
                            payitem.querySelector('input[name="description"]').value = field.description;
                            payitem.querySelector('input[name="amount"]').value = field.amount;
                        }
                    });
                    //===========================================================
                    document.getElementById('exonerated').value = contract.exonerado;
                    document.getElementById('taxable').value = contract.imponible;
                    document.getElementById('tax').value = contract.impuesto;
                    document.getElementById('total').value = contract.valorTotal;

                })
                .catch(error => {
                    console.error("Error:", error);
                });
        const actionbtn = document.getElementById('form-btn');
        actionbtn.value = "edit";
        document.getElementById("modal").click();
    }
    function editcontract() {
        const contractid = document.getElementById('contractid').value;
        const projectname = document.getElementById('projectname').value;
        const dataToSend = datatosend();
        //dataToSend.id = contractid;
        fetch('contract?action=update&id=' + contractid, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(dataToSend)
        }).then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: '¡Éxito!',
                            text: 'Se actualizó la cuenta correctamente.',
                            icon: 'info',
                            timer: 2500,
                            showConfirmButton: false,
                            //confirmButtonText: 'Ok',
                            background: '#f0f9ff',
                            confirmButtonColor: '#3085d6'
                        }).then(() => {
                            window.location.href = 'contract?action=load&project=' + projectname;
                        });
                    } else {
                        Swal.fire({
                            title: '¡Error!',
                            text: 'Ocurrió un error reintente o pongase en contacto con el administrador del sistema.',
                            icon: 'error',
                            timer: 2500,
                            showConfirmButton: false,
                            //confirmButtonText: 'Ok',
                            background: '#f0f9ff',
                            confirmButtonColor: '#3085d6'
                        }).then(() => {
                            window.location.href = 'contract?action=load&project=' + projectname;
                        });
                    }
                })
                .catch(error => console.error(error));
        //cleanform();
    }
    function totalsum() {
        let exonerated = parseFloat(document.getElementById('exonerated').value) || 0;
        let taxable = parseFloat(document.getElementById('taxable').value) || 0;
        let tax = parseFloat(document.getElementById('tax').value) || 0;
        let total = exonerated + taxable + tax;
        document.getElementById('total').value = total;
    }
    function datatosend() {
        //---------------------------------------------------
        const container = document.getElementById('container-payment');
        const items = container.querySelectorAll('div[id^="item"]');
        const pay = [];
        items.forEach(item => {
            const inputs = item.querySelectorAll('.item');
            let detail = {};
            inputs.forEach(input => {
                detail[input.name] = input.value;
            });
            pay.push(detail);
        });
        //---------------------------------------------------

        const data = {
            project: document.getElementById('projectid').value,
            client: document.getElementById('clientid').value,
            typecontract: document.getElementById('contracttype').value,
            currency: document.getElementById('contractcurrency').value,
            description: document.getElementById('contractdescription').value,
            term: document.getElementById('contractterm').value,
            payment: document.querySelector('input[name="paymenttype"]:checked').value,
            paydetail: pay, // <-- Aquí mandas el arreglo tal cual, no como string
            exonerated: document.getElementById('exonerated').value,
            taxable: document.getElementById('taxable').value,
            tax: document.getElementById('tax').value,
            total: document.getElementById('total').value
        };

        return data;
    }
    function deletecontract(id) {

        let project = document.getElementById("projectname").value;

        Swal.fire({
            title: '¿Estás seguro de eliminar este contrato?',
            text: "Esta acción no se puede deshacer",
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Sí, continuar',
            cancelButtonText: 'No, cancelar',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('contract?action=delete&id=' + id)
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    title: '¡Éxito!',
                                    text: 'Se eliminó el contrato correctamente.',
                                    icon: 'info',
                                    timer: 2500,
                                    showConfirmButton: false,
                                    //confirmButtonText: 'Ok',
                                    background: '#f0f9ff',
                                    confirmButtonColor: '#3085d6'
                                }).then(() => {
                                    window.location.href = 'contract?action=load&project=' + project;
                                });
                            } else {
                                Swal.fire({
                                    title: '¡Error!',
                                    text: 'Ocurrió un error reintente o pongase en contacto con el administrador del sistema.',
                                    icon: 'error',
                                    timer: 2500,
                                    showConfirmButton: false,
                                    //confirmButtonText: 'Ok',
                                    background: '#f0f9ff',
                                    confirmButtonColor: '#3085d6'
                                });
                            }
                        })
                        .catch(error => console.error(error));
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                Swal.fire(
                        'Cancelado',
                        'La acción fue cancelada :)',
                        'error'
                        );
            }
        });
    }
    function addbudgetitem() {
        i++;
        let html = '';
        html = `<div id="item` + i + `" class="row">
                    <input type="hidden" name="valitem" value="">    
                    <input type="hidden" name="numitem" value="` + i + `">  
                    <input type="hidden" name="subitem" value="1">      
                    <div class="col-md-2 d-flex">
                        <div class="form-floating m-2">
                            <button style="width: 70px;" onclick="addbudgetdetail('item` + i + `')" type="button" class="btn btn-warning">
                                <img style="filter: brightness(0) invert(1);" src="RESOURCES/svg/newdetail.svg" width="16" height="16" Title="Añadir detalle" data-bs-toggle="tooltip"> 
                            </button>
                        </div>
                        <div class="form-floating m-2">
                            <button style="width: 70px;" onclick="dropbudgetdetail('item` + i + `')" type="button" class="btn btn-danger">
                                <img style="filter: brightness(0) invert(1);" src="RESOURCES/svg/trash.svg" width="16" height="16" Title="Eliminar detalle" data-bs-toggle="tooltip"> 
                            </button>
                        </div>  
                    </div>
                    <div class="col-md-1">
                        <div class="form-floating mb-2">
                            <input type="text" name="itemnum` + i + `" class="budgetitem form-control" value="` + i + `" disabled>
                            <label for="floatingInput">Item</label>
                        </div> 
                    </div>  
                    <div class="col-md-7">
                        <div class="form-floating mb-2">
                            <input type="text" name="itemdes` + i + `" class="budgettittle form-control" required>
                            <label for="floatingInput">Ingrese el titulo de la partida</label>
                        </div> 
                    </div>  
                    <div class="col-md-2">
                        <div class="form-floating mb-2">
                            <input type="number" name="itemsub` + i + `" class="subtotal form-control" step="0.01" disabled required>
                            <label for="floatingInput">Parcial</label>
                        </div>
                    </div>
                </div>`;

        document.getElementById("order-details").insertAdjacentHTML("beforeend", html);
        document.getElementById("budget-items").value = i;
    }
    function addbudgetdetail(itemid) {

        try {
            const item = document.querySelector("#" + itemid + " [name='valitem']");
            const num = document.querySelector("#" + itemid + " [name='numitem']");
            const sub = document.querySelector("#" + itemid + " [name='subitem']");
            let html = '';
            let y = parseInt(num.value);
            let x = parseInt(sub.value);
            html = `<div id="subitem` + y + `_` + x + `" class="d-flex">
                        <div style="width: 7%;" class="form-floating mb-2">
                            <input type="text" name="subitem` + y + `_` + x + `" class="form-control" value="` + y + `.` + x + `" disabled>
                            <label for="floatingInput">Item</label>
                        </div>
                        <div style="width: 42.1%;" class="form-floating mb-2">
                            <input type="text" name="subdescription` + y + `_` + x + `" class="form-control" required>
                            <label for="floatingInput">Descripcion</label>
                        </div>
                        <div style="width: 12%;" class="form-floating mb-2">
                            <select class="form-select" name="subunit` + y + `_` + x + `" aria-label="Floating label select example" required>
                                <option></option>
                                <option value="GLB">GLB</option>
                                <option value="BAL">BAL</option>
                                <option value="BOT">BOT</option>
                                <option value="CJA">CJA</option>
                                <option value="CM">CM</option>
                                <option value="MT">MT</option>
                                <option value="CM2">CM2</option>
                                <option value="MT2">MT2</option>
                                <option value="CM3">CM3</option>
                                <option value="MT3">MT3</option>
                                <option value="MMT">MMT</option>
                                <option value="MM2">MM2</option>
                                <option value="MM3">MM3</option>
                                <option value="GR">GR</option>
                                <option value="KG">KG</option>
                                <option value="TON">TON</option>
                                <option value="MLL">MLL</option>
                                <option value="PAQ">PAQ</option>
                                <option value="PAL">PAL</option>
                                <option value="UNID">UNID</option>
                                <option value="DOC">DOC</option>
                            </select>
                            <label for="floatingSelect">Unid.</label>
                        </div>
                        <div style="width: 12%;" class="form-floating mb-2">
                            <input type="number" name="subquantity` + y + `_` + x + `" class="form-control" step="0.01" required>
                            <label for="floatingInput">Cant.</label>
                        </div>
                        <div style="width: 12%;" class="form-floating mb-2">
                            <input type="number" name="subprice` + y + `_` + x + `" class="form-control" step="0.01" required>
                            <label for="floatingInput">P. unit. sin igv</label>
                        </div>
                        <div style="width: 14.9%;" class="form-floating mb-2">
                            <input type="number" name="subtotal` + y + `_` + x + `" class="form-control" step="0.01" required>
                            <label for="floatingInput">Subtotal</label>
                        </div>
                    </div>`;

            document.getElementById(itemid).insertAdjacentHTML("beforeend", html);
            item.value = "subitem" + y + "_" + x;
            x++;
            sub.value = x;
        } catch (error) {
            console.error("Ocurrió un error:", error.message);
        }
    }
    function dropbudgetitem(itemid) {

        try {
            const ref = document.getElementById("budget-items");
            let idx = ref.value;
            const drop = document.getElementById("item" + idx);
            drop.remove();
            idx--;
            if (idx === 0) {
                ref.value = "";
                i = 0;
            } else {
                ref.value = idx;
                i = idx;
            }
        } catch (error) {
            console.error("Ocurrio un error: " + error);
        }
    }
    function dropbudgetdetail(itemid) {

        try {
            const ref = document.querySelector("#" + itemid + " [name='valitem']");
            const ele = document.querySelector("#" + itemid + " [name='subitem']");
            let itm = ref.value;
            let des = itm.split('_')[0];
            let idx = itm.split('_')[1];
            const drop = document.getElementById(itm);
            drop.remove();
            idx--;
            if (idx === 0) {
                ref.value = "";
                ele.value = "1";
            } else {
                ref.value = des + "_" + idx;
                idx++;
                ele.value = idx;
            }
        } catch (error) {
            console.error("Ocurrió un error:", error.message);
        }
    }
    function addpaymentdetail() {
        j++;
        let html = "";
        let type = document.querySelector('input[name="paymenttype"]:checked')?.value || '';
        const add = document.getElementById('pay-num-item');
        if (type === '') {
            Swal.fire({
                title: '¡Atención!',
                text: 'Debe seleccionar una forma de pago',
                icon: 'info',
                showConfirmButton: true,
                confirmButtonText: 'Ok',
                background: '#f0f9ff',
                confirmButtonColor: '#3085d6'
            });
        }
        if (type === 'VALORIZACIONES') {
            html = `<div id="pay-item` + j + `" class="form-floating mb-1">        
                        <div class="d-flex">
                            <div style="width: 10%;" class="form-floating mb-2">
                                <input type="text" name="item" class="form-control item" value="` + j + `" disabled>
                                <label for="floatingInput">Item</label>
                            </div>
                            <div style="width: 30%;" class="form-floating mb-2">
                                <select name="header"  class="form-select item" aria-label="Floating label select example" required>
                                    <option></option>
                                    <option value="Adelanto">Adelanto</option>
                                    <option value="Val. semanal">Val. semanal</option>
                                    <option value="Val. mensual">Val. mensual</option>
                                    <option value="F. garantia">F. garantia</option>
                                    <option value="Liquidacion">Liquidacion</option>
                                </select>
                                <label for="floatingSelect">Tipo</label>
                            </div>
                            <div style="width: 45%;" class="form-floating mb-2">
                                <input type="text" name="description" class="form-control item" placeholder="Descripcion" required>
                                <label for="floatingInput">Descripcion</label>            
                            </div>
                            <div style="width: 15%;" class="form-floating mb-2">
                                <input type="number" name="amount" class="form-control item" placeholder="Valor" step="0.01" required>
                                <label for="floatingInput">Valor</label>            
                            </div>
                        </div>
                    </div>`;
            document.getElementById("container-payment").insertAdjacentHTML("beforeend", html);
            add.value = j;
        }
        if (type === 'HITOS') {
            html = `<div id="pay-item` + j + `" class="form-floating mb-1">
                        <div class="d-flex">
                            <div style="width: 10%;" class="form-floating mb-2">
                                <input type="text" name="item" class="form-control item" value="` + j + `" disabled>
                                <label for="floatingInput">Item</label>
                            </div>
                            <div style="width: 30%;" class="form-floating mb-2">
                                <input type="text" name="header" class="form-control datepicker item" placeholder="Fecha" required>
                                <label for="floatingInput">Fecha</label>
                            </div>
                            <div style="width: 45%;" class="form-floating mb-2">
                                <input type="text" name="description" class="form-control item" placeholder="Descripcion" required>
                                <label for="floatingInput">Descripcion</label>
                            </div>
                            <div style="width: 15%;" class="form-floating mb-2">
                                <input type="number" name="amount" class="form-control item" placeholder="Valor" step="0.01" required>
                                <label for="floatingInput">Valor</label>
                            </div>
                        </div>
                    </div>`;
            document.getElementById("container-payment").insertAdjacentHTML("beforeend", html);
            flatpickr(".datepicker", {
                dateFormat: "d/m/Y",
                altInput: true,
                altFormat: "F j, Y",
                allowInput: true,
                locale: "es" // ? idioma español
            });
            add.value = j;
        }
    }
    function droppaymentdetail() {

        try {
            const ref = document.getElementById("pay-num-item");
            let idx = ref.value;
            const drop = document.getElementById("pay-item" + idx);
            drop.remove();
            idx--;
            if (idx === 0) {
                ref.value = "";
                j = 0;
            } else {
                ref.value = idx;
                j = idx;
            }
        } catch (error) {
            console.error("Ocurrio un error: " + error);
        }
    }
    function paymentclean() {
        j = 0;
        document.getElementById('container-payment').innerHTML = '';
    }
    function addgconsideration() {
        m++;
        let html = '';
        console.log(m);
        html = `<div id="gen-con` + m + `" class="d-flex">
                    <div style="width: 10%;" class="form-floating mb-2">
                        <input type="text" name="num" class="form-control item" value="` + m + `" disabled>
                        <label for="floatingInput">Item</label>
                    </div>
                    <div style="width: 90%;" class="form-floating mb-2 item">
                        <input type="text" name="description" class="form-control" required>
                        <label for="floatingInput">Descripcion</label>
                    </div>
                </div>`;
        document.getElementById("general-considerations").insertAdjacentHTML("beforeend", html);
        document.querySelector(".gen-con-num").value = m;
    }
    function dropgconsideration() {

        try {
            const ref = document.querySelector(".gen-con-num");
            let idx = ref.value;
            const drop = document.getElementById("gen-con" + idx);
            drop.remove();
            idx--;
            if (idx === 0) {
                ref.value = "";
                m = 0;
            } else {
                ref.value = idx;
                m = idx;
            }
        } catch (error) {
            console.error("Ocurrio un error: " + error);
        }
    }
    function addsconsideration() {
        n++;
        let html = '';
        html = `<div id="spc-con` + n + `" class="d-flex">
                    <div style="width: 10%;" class="form-floating mb-2">
                        <input type="text" name="num" class="form-control item" value="` + n + `" disabled>
                        <label for="floatingInput">Item</label>
                    </div>
                    <div style="width: 90%;" class="form-floating mb-2 item">
                        <input type="text" name="description" class="form-control" required>
                        <label for="floatingInput">Descripcion</label>
                    </div>
                </div>`;
        document.getElementById("specific-considerations").insertAdjacentHTML("beforeend", html);
        document.querySelector(".spc-con-num").value = n;
    }
    function dropsconsideration() {

        try {
            const ref = document.querySelector(".spc-con-num");
            let idx = ref.value;
            const drop = document.getElementById("spc-con" + idx);
            drop.remove();
            idx--;
            if (idx === 0) {
                ref.value = "";
                n = 0;
            } else {
                ref.value = idx;
                n = idx;
            }
        } catch (error) {
            console.error("Ocurrio un error: " + error);
        }
    }
    function showdetails(obj) {
        const arr = JSON.parse(obj);
        let html = '<ul style="text-align:left;">';
        for (let i = 0; i < arr.length; i++) {
            html += `<li class="list-group-item"><strong>Pago N° ` + arr[i].numitem + `: </strong>` + arr[i].description + `: ` + arr[i].amount + `</li>`;
        }
        html += '</ul>';

        Swal.fire({
            title: 'Detalle de Pago',
            html: html,
            icon: 'info',
            showConfirmButton: true,
            confirmButtonText: 'Cerrar',
            background: '#f0f9ff',
            confirmButtonColor: '#3085d6'
        });
    }
    function cleanform() {
        const frm = document.getElementById('orderform');
        frm.reset();
        document.getElementById('createprov').innerHTML = '';
        document.getElementById('order-details').innerHTML = '';
        document.getElementById('container-payment').innerHTML = '';
        document.getElementById('general-considerations').innerHTML = '';
        document.getElementById('specific-considerations').innerHTML = '';
        document.getElementById("providername").disabled = false;
        const fields = frm.querySelectorAll('input, select, textarea');
        fields.forEach(field => {
            field.classList.remove('is-valid', 'is-invalid');
        });
    }
</script>
