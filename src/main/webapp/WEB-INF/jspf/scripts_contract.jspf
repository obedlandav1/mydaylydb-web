<script>
    let contador = 0;
    document.getElementById('contractform').addEventListener('submit', function (event) {
        event.preventDefault(); // Evita que el formulario se envíe
        event.stopPropagation();

        const cli = document.getElementById('clientname');
        const tip = document.getElementById('contracttype');
        const mon = document.getElementById('contractcurrency');
        const des = document.getElementById('contractdescription');
        const pla = document.getElementById('contractterm');
        const exo = document.getElementById('exonerated');
        const bas = document.getElementById('taxable');
        const imp = document.getElementById('tax');
        const tot = document.getElementById('total');

        let fields = [cli, tip, mon, des, pla, exo, bas, imp, tot];

        fields.forEach(field => {
            field.classList.remove('is-valid', 'is-invalid');
        });

        fields.forEach(field => {
            if (field.value === "") {
                field.classList.add('is-invalid');
            } else {
                field.classList.add('is-valid');
            }
        });
        const totgen = parseFloat(tot.value) || 0;
        const container = document.getElementById('container-payment');
        const items = container.querySelectorAll('input[name="amount"]');

        let totdet = 0;
        items.forEach(item => {
            let valor = parseFloat(item.value) || 0;
            totdet = totdet + valor;
        });
        console.log("Sum detalle: " + totdet);
        console.log("Sum total: " + totgen);

        if (totdet !== totgen) {
            Swal.fire({
                title: '¡Error!',
                text: 'El valor total no coincide con al sumatoria del detalle de pago, verifique.',
                icon: 'error',
                showConfirmButton: true,
                confirmButtonText: 'Ok',
                background: '#f0f9ff',
                confirmButtonColor: '#3085d6'
            });
        } else {
            if (
                    cli.value.trim() !== "" &&
                    tip.value.trim() !== "" &&
                    mon.value.trim() !== "" &&
                    des.value.trim() !== "" &&
                    pla.value.trim() !== "" &&
                    exo.value.trim() !== "" &&
                    bas.value.trim() !== "" &&
                    imp.value.trim() !== "" &&
                    tot.value.trim() !== ""
                    ) {
                let actiontype = document.getElementById('form-btn').value;
                if (actiontype == 'create') {
                    createcontract();
                } else if (actiontype == 'edit') {
                    editcontract();
                }
            }
        }
    });
    document.getElementById('container-payment').addEventListener('input', function (e) {
        let o = e.target.closest('div');
        let id = o?.id;

        let input = e.target;
        let div = input.closest('div');

        console.log(div);
    });


    function newcontract() {

        contador = 0;
        cleanform();
        document.getElementById('staticBackdropLabel').textContent = "Nuevo contrato";
        const actionbtn = document.getElementById('form-btn');
        actionbtn.value = "create";
        document.getElementById("modal").click();
    }
    function createcontract() {
        try {
            const projectname = document.getElementById('projectname').value;
            const dataToSend = datatosend();
            fetch('contract?action=create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(dataToSend)
            }).then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: '¡Éxito!',
                                text: 'Se creó el contrato correctamente.',
                                icon: 'info',
                                timer: 2500,
                                showConfirmButton: false,
                                //confirmButtonText: 'Ok',
                                background: '#f0f9ff',
                                confirmButtonColor: '#3085d6'
                            }).then(() => {
                                window.location.href = 'contract?action=load&project=' + projectname;
                            });
                        } else {
                            Swal.fire({
                                title: '¡Error!',
                                text: 'Ocurrió un error reintente o pongase en contacto con el administrador del sistema.',
                                icon: 'error',
                                //timer: 2500,
                                showConfirmButton: false,
                                //confirmButtonText: 'Ok',
                                background: '#f0f9ff',
                                confirmButtonColor: '#3085d6'
                            }).then(() => {
                                window.location.href = 'contract?action=load&project=' + projectname;
                            });
                        }
                    });
            //.catch(error => console.error(error));
        } catch (error) {
            console.error("An error occurred:", error.message);
        }
    }
    function loadcontract(id) {

        contador = 0;
        cleanform();
        document.getElementById("staticBackdropLabel").textContent = "Editar proyecto";
        fetch('contract?action=read&id=' + id)
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Error al obtener los datos");
                    }
                    return response.json();
                })
                .then(data => {
                    const contract = data[0];
                    //document.getElementById('projectid').value = contract.id;
                    document.getElementById('contractid').value = id;
                    document.getElementById('clientid').value = contract.clientes_id;
                    document.getElementById('clientname').value = contract.nombreCliente;
                    document.getElementById('contracttype').value = contract.tipoContrato_id;
                    document.getElementById('contractcurrency').value = contract.tipoMoneda_id;
                    document.getElementById('contractdescription').value = contract.descripcionContrato;
                    document.getElementById('contractterm').value = contract.plazoContrato;
                    //===========================================================
                    let paytype = contract.tipopagoContrato;
                    const radio = document.querySelector(`input[name="paymenttype"][value="` + paytype + `"]`);
                    if (radio) {
                        radio.checked = true;
                    }
                    const detail = JSON.parse(contract.detallepagoContrato);
                    console.log(detail);
                    const container = document.getElementById("container-payment");
                    detail.forEach(field => {
                        console.log(field);
                        contador++;
                        if (paytype === 'VALORIZACIONES') {
                            let html = `<div id="pay-item` + contador + `" class="form-floating mb-1">        
                                        <div class="d-flex">
                                            <div style="width: 10%;" class="form-floating mb-2">
                                                <input type="text" name="numitem" class="form-control item" value="` + contador + `" disabled>
                                                <label for="floatingInput">Item</label>
                                            </div>
                                            <div style="width: 30%;" class="form-floating mb-2">
                                                <select name="header"  class="form-select item" aria-label="Floating label select example" required>
                                                    <option></option>
                                                    <option value="Adelanto">Adelanto</option>
                                                    <option value="Val. semanal">Val. semanal</option>
                                                    <option value="Val. mensual">Val. mensual</option>
                                                    <option value="F. garantia">F. garantia</option>
                                                    <option value="Liquidacion">Liquidacion</option>
                                                </select>
                                                <label for="floatingSelect">Tipo</label>
                                            </div>
                                            <div style="width: 45%;" class="form-floating mb-2">
                                                <input type="text" name="description" class="form-control item" placeholder="Descripcion" required>
                                                <label for="floatingInput">Descripcion</label>            
                                            </div>
                                            <div style="width: 15%;" class="form-floating mb-2">
                                                <input type="number" name="amount" class="form-control item" placeholder="Valor" step="0.01" required>
                                                <label for="floatingInput">Valor</label>            
                                            </div>
                                        </div>
                                    </div>`;
                            container.insertAdjacentHTML("beforeend", html);
                            const payitem = container.querySelector('#pay-item' + contador);
                            payitem.querySelector('input[name="numitem"]').value = field.numitem;
                            payitem.querySelector('select[name="header"]').value = field.header;
                            payitem.querySelector('input[name="description"]').value = field.description;
                            payitem.querySelector('input[name="amount"]').value = field.amount;
                        } else if (paytype === 'CRONOGRAMA') {
                            let html = `<div id="pay-item` + contador + `" class="form-floating mb-1">
                                        <div class="d-flex">
                                            <div style="width: 10%;" class="form-floating mb-2">
                                                <input type="text" name="numitem" class="form-control item" value="` + contador + `" disabled>
                                                <label for="floatingInput">Item</label>
                                            </div>
                                            <div style="width: 30%;" class="form-floating mb-2">
                                                <input type="text" name="header" class="form-control datepicker item" placeholder="Fecha" required>
                                                <label for="floatingInput">Fecha</label>
                                            </div>
                                            <div style="width: 45%;" class="form-floating mb-2">
                                                <input type="text" name="description" class="form-control item" placeholder="Descripcion" required>
                                                <label for="floatingInput">Descripcion</label>
                                            </div>
                                            <div style="width: 15%;" class="form-floating mb-2">
                                                <input type="number" name="amount" class="form-control item" placeholder="Valor" step="0.01" required>
                                                <label for="floatingInput">Valor</label>
                                            </div>
                                        </div>
                                    </div>`;
                            container.insertAdjacentHTML("beforeend", addpaymentdetail());
                            flatpickr(".datepicker", {
                                dateFormat: "Y-m-d",
                                //altInput: true,
                                //altFormat: "F j, Y",
                                allowInput: true,
                                locale: "es" // ? idioma español
                            });
                            const payitem = container.querySelector('#pay-item' + contador);
                            payitem.querySelector('input[name="numitem"]').value = field.numitem;
                            payitem.querySelector('select[name="header"]').value = field.header;
                            payitem.querySelector('input[name="description"]').value = field.description;
                            payitem.querySelector('input[name="amount"]').value = field.amount;
                        }
                    });
                    //===========================================================
                    document.getElementById('exonerated').value = contract.exonerado;
                    document.getElementById('taxable').value = contract.imponible;
                    document.getElementById('tax').value = contract.impuesto;
                    document.getElementById('total').value = contract.valorTotal;

                })
                .catch(error => {
                    console.error("Error:", error);
                });
        const actionbtn = document.getElementById('form-btn');
        actionbtn.value = "edit";
        document.getElementById("modal").click();
    }
    function editcontract() {
        const contractid = document.getElementById('contractid').value;
        const projectname = document.getElementById('projectname').value;
        const dataToSend = datatosend();
        //dataToSend.id = contractid;
        fetch('contract?action=update&id=' + contractid, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(dataToSend)
        }).then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: '¡Éxito!',
                            text: 'Se actualizó la cuenta correctamente.',
                            icon: 'info',
                            timer: 2500,
                            showConfirmButton: false,
                            //confirmButtonText: 'Ok',
                            background: '#f0f9ff',
                            confirmButtonColor: '#3085d6'
                        }).then(() => {
                            window.location.href = 'contract?action=load&project=' + projectname;
                        });
                    } else {
                        Swal.fire({
                            title: '¡Error!',
                            text: 'Ocurrió un error reintente o pongase en contacto con el administrador del sistema.',
                            icon: 'error',
                            timer: 2500,
                            showConfirmButton: false,
                            //confirmButtonText: 'Ok',
                            background: '#f0f9ff',
                            confirmButtonColor: '#3085d6'
                        }).then(() => {
                            window.location.href = 'contract?action=load&project=' + projectname;
                        });
                    }
                })
                .catch(error => console.error(error));
        //cleanform();
    }
    function datatosend() {
        //----------------------------------------------------
        const container = document.getElementById('container-payment');
        const items = container.querySelectorAll('div[id^="pay-item"]');
        const pay = [];
        items.forEach(item => {
            const inputs = item.querySelectorAll('.item');
            let detail = {};
            inputs.forEach(input => {
                detail[input.name] = input.value;
            });
            pay.push(detail);
        });
        //---------------------------------------------------

        const data = {
            project: document.getElementById('projectid').value,
            client: document.getElementById('clientid').value,
            typecontract: document.getElementById('contracttype').value,
            currency: document.getElementById('contractcurrency').value,
            description: document.getElementById('contractdescription').value,
            term: document.getElementById('contractterm').value,
            payment: document.querySelector('input[name="paymenttype"]:checked').value,
            paydetail: pay, // <-- Aquí mandas el arreglo tal cual, no como string
            exonerated: document.getElementById('exonerated').value,
            taxable: document.getElementById('taxable').value,
            tax: document.getElementById('tax').value,
            total: document.getElementById('total').value
        };
        console.log(data);
        return data;
    }
    function deletecontract(id) {

        let project = document.getElementById("projectname").value;

        Swal.fire({
            title: '¿Estás seguro de eliminar este contrato?',
            text: "Esta acción no se puede deshacer",
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Sí, continuar',
            cancelButtonText: 'No, cancelar',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('contract?action=delete&id=' + id)
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    title: '¡Éxito!',
                                    text: 'Se eliminó el contrato correctamente.',
                                    icon: 'info',
                                    timer: 2500,
                                    showConfirmButton: false,
                                    //confirmButtonText: 'Ok',
                                    background: '#f0f9ff',
                                    confirmButtonColor: '#3085d6'
                                }).then(() => {
                                    window.location.href = 'contract?action=load&project=' + project;
                                });
                            } else {
                                Swal.fire({
                                    title: '¡Error!',
                                    text: 'Ocurrió un error reintente o pongase en contacto con el administrador del sistema.',
                                    icon: 'error',
                                    timer: 2500,
                                    showConfirmButton: false,
                                    //confirmButtonText: 'Ok',
                                    background: '#f0f9ff',
                                    confirmButtonColor: '#3085d6'
                                });
                            }
                        })
                        .catch(error => console.error(error));
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                Swal.fire(
                        'Cancelado',
                        'La acción fue cancelada :)',
                        'error'
                        );
            }
        });
    }
    function addpaymentdetail() {
        contador++;
        let html = "";
        let type = document.querySelector('input[name="paymenttype"]:checked')?.value || '';
        const add = document.getElementById('pay-num-item');
        if (type === '') {
            Swal.fire({
                title: '¡Atención!',
                text: 'Debe seleccionar una forma de pago',
                icon: 'info',
                showConfirmButton: true,
                confirmButtonText: 'Ok',
                background: '#f0f9ff',
                confirmButtonColor: '#3085d6'
            });
        }
        if (type === 'VALORIZACIONES') {
            html = `<div id="pay-item` + contador + `" class="form-floating mb-1">        
                        <div class="d-flex">
                            <div style="width: 10%;" class="form-floating mb-2">
                                <input type="text" name="numitem" class="form-control item" value="` + contador + `" disabled>
                                <label for="floatingInput">Item</label>
                            </div>
                            <div style="width: 30%;" class="form-floating mb-2">
                                <select name="header"  class="form-select item" aria-label="Floating label select example" required>
                                    <option></option>
                                    <option value="Adelanto">Adelanto</option>
                                    <option value="Val. semanal">Val. semanal</option>
                                    <option value="Val. mensual">Val. mensual</option>
                                    <option value="F. garantia">F. garantia</option>
                                    <option value="Liquidacion">Liquidacion</option>
                                </select>
                                <label for="floatingSelect">Tipo</label>
                            </div>
                            <div style="width: 45%;" class="form-floating mb-2">
                                <input type="text" name="description" class="form-control item" placeholder="Descripcion" required>
                                <label for="floatingInput">Descripcion</label>            
                            </div>
                            <div style="width: 15%;" class="form-floating mb-2">
                                <input type="number" name="amount" class="form-control item" placeholder="Valor" step="0.01" required>
                                <label for="floatingInput">Valor</label>            
                            </div>
                        </div>
                    </div>`;
            document.getElementById("container-payment").insertAdjacentHTML("beforeend", html);
            add.value = contador;
        } else if (type === 'CRONOGRAMA') {
            html = `<div id="pay-item` + contador + `" class="form-floating mb-1">
                        <div class="d-flex">
                            <div style="width: 10%;" class="form-floating mb-2">
                                <input type="text" name="numitem" class="form-control item" value="` + contador + `" disabled>
                                <label for="floatingInput">Item</label>
                            </div>
                            <div style="width: 30%;" class="form-floating mb-2">
                                <input type="text" name="header" class="form-control datepicker item" placeholder="Fecha" required>
                                <label for="floatingInput">Fecha</label>
                            </div>
                            <div style="width: 45%;" class="form-floating mb-2">
                                <input type="text" name="description" class="form-control item" placeholder="Descripcion" required>
                                <label for="floatingInput">Descripcion</label>
                            </div>
                            <div style="width: 15%;" class="form-floating mb-2">
                                <input type="number" name="amount" class="form-control item" placeholder="Valor" step="0.01" required>
                                <label for="floatingInput">Valor</label>
                            </div>
                        </div>
                    </div>`;
            document.getElementById("container-payment").insertAdjacentHTML("beforeend", html);
            flatpickr(".datepicker", {
                dateFormat: "Y-m-d",
                //altInput: true,
                //altFormat: "F j, Y",
                allowInput: true,
                locale: "es" // ? idioma español
            });
            add.value = contador;
        }
    }
    function droppaymentdetail() {

        try {
            const ref = document.getElementById("pay-num-item");
            let idx = ref.value;
            const drop = document.getElementById("pay-item" + idx);
            drop.remove();
            idx--;
            if (idx === 0) {
                ref.value = "";
                contador = 0;
            } else {
                ref.value = idx;
                contador = idx;
            }
        } catch (error) {
            console.error("Ocurrio un error: " + error);
        }
    }
    function cleanform() {
        const frm = document.getElementById('contractform');
        frm.reset();
        //document.getElementById('clientid').value = '';
        //document.getElementById('clientswitch').checked = false;
        //document.querySelector('input[name="paymenttype"]').checked = false;
        document.getElementById('createcli').innerHTML = '';
        document.getElementById('container-payment').innerHTML = '';
        document.getElementById("clientname").disabled = false;
        const fields = frm.querySelectorAll('input, select, textarea');
        fields.forEach(field => {
            field.classList.remove('is-valid', 'is-invalid');
        });
    }
    function paymentclean() {
        contador = 0;
        document.getElementById('container-payment').innerHTML = '';
    }
    function showdetails(obj) {

        const arr = JSON.parse(obj);
        let sum1 = 0;
        let html = '<table style="float: left;"><tbody class="align-middle">';
        for (let i = 0; i < arr.length; i++) {
            html += `<tr><td><strong>Pago N° ` + arr[i].numitem + `: </strong></td><td>` + arr[i].description + `</td><td> = </td><td>` + arr[i].amount + `</td></tr>`;
            let sum2 = parseFloat(arr[i].amount);
            sum1 = sum1 + sum2;
        }
        html += `<tr><td colspan="2"></td><td><strong>Total </strong></td><td><strong>` + sum1 + `</strong></td></tr></tbody></table>`;
        Swal.fire({
            title: 'Detalle de Pago',
            html: html,
            icon: 'info',
            width: 'auto',
            showConfirmButton: true,
            confirmButtonText: 'Cerrar',
            background: '#f0f9ff',
            confirmButtonColor: '#3085d6'
        });
    }
</script>
